# 1. 처음방문한 사람과 재방문한 사람의 구매가격
select productPrice , visitnumber,  fullvisitorId, 
if (visitnumber =1,sum (productPrice),null)  as one, #처음방문한 사람의 구매가격
if (visitnumber !=1,sum (productPrice),null)  as notone #재방문한 사람의 구매가격

FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` , unnest(hits), unnest(product)
where productPrice IS NOT NULL and productPrice != 0 and _TABLE_SUFFIX BETWEEN '20170611' AND '20170631' # 가격이 0이나 null값이 아닌 사람에 대하여
group by productPrice,fullvisitorId, 1,2
order by productPrice
limit 100;

# 2. fullvisitor id를 기준으로 가장 많은 페이지뷰수를 기록한 사용자와 그에 따른 세션 시간
select totals.pageviews, fullvisitorId, totals.timeOnSite
from `bigquery-public-data.google_analytics_sample.ga_sessions_*`
where totals.timeOnSite is not null and _TABLE_SUFFIX BETWEEN '20170611' AND '20170631'
group by fullvisitorId,1,2,3
limit 1000;

# 3. 해당 기간 동안 가장많은 product를 구매한 횟수
SELECT productQuantity,fullvisitorId 
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` , unnest(hits), unnest(product)
where productQuantity is not null and _TABLE_SUFFIX BETWEEN '20160801' AND '20170631'
group by 1,2
order by productQuantity Desc
LIMIT 1000

# 4. 해당 기간 동안 가장 많은 이탈율이 발생한 단계
select fullvisitorId, totals.bounces,
case ecommerceaction.action_type
when "0" then "알수없음"
when "1" then "제품목록"
when "2" then "detail"
when "3" then "add"
when "4" then "remove"
when "5" then "checkout"
when "6" then "purchase"
when "7" then "refund"
when "8" then "checkout_option"
else 'fail'
end as ecommerceaction
from `bigquery-public-data.google_analytics_sample.ga_sessions_*`, unnest(hits)
where totals.bounces is not null and ecommerceaction.action_type !="0" and _TABLE_SUFFIX BETWEEN '20160111' AND '20170631'
group by 1,2,3
limit 1000;

# 5. 해당 사이트를 3번이상 들어갔다 나온사람의 event 정보
select eventInfo.eventCategory, eventInfo.eventAction, eventInfo.eventLabel
from `bigquery-public-data.google_analytics_sample.ga_sessions_20170801` , unnest(hits) 
where fullvisitorId in 
(SELECT fullVisitorId FROM(
select fullvisitorId,count(fullvisitorId) as cnt
from `bigquery-public-data.google_analytics_sample.ga_sessions_20170801`, UNNEST(hits)
where page.pagePath like "%/google+redesign/electronics%"
GROUP BY 1
)
where cnt > 3 
)  

# 6. 해당 브라우저를 사용하는 사용자들의 device category 종류의 따른 수
SELECT COUNT(IF(device.deviceCategory= 'desktop', 1, null)) as sum_desktop, COUNT(IF(device.deviceCategory= 'mobile', 1, null)) as sum_mobile, COUNT(IF(device.deviceCategory= 'tablet' ,1, null)) as sum_tablet,
count(device.deviceCategory) as sum, device.deviceCategory as kind
from `bigquery-public-data.google_analytics_sample.ga_sessions_20170801` , unnest(hits) 
where fullvisitorId in 
(SELECT fullVisitorId FROM(
select fullvisitorId,count(fullvisitorId) as cnt
from `bigquery-public-data.google_analytics_sample.ga_sessions_20170801`, UNNEST(hits)
where device.browser = 'Chrome'
GROUP BY 1
)
where cnt > 1 
)  group by 5

# 7. 20160111~20170631부터 날짜별 전송된 ga 데이터 개수
SELECT COUNT(totals.bounces) as bounce ,date
from `bigquery-public-data.google_analytics_sample.ga_sessions_*` , unnest(hits) 
where _TABLE_SUFFIX BETWEEN '20160111' AND '20170631'
group by 2
order by date

# 8. 특정 기간(7월 한달) 동안 접속한 사용자와 그 사용자의 세션수를 출력하세요.
SELECT fullvisitorid, count(visitNumber) as count  FROM `miteam-186206.82798328.ga_sessions_*`
where _table_suffix between '20200701' and '20200731' 
group by 1
order by 2 desc

# 9. 특정 기간(7월 한달)동안 접속한 사용자 중 해당 세션 방문 시간이 10s 이상인 사용자의 모든 페이지, 이벤트 정보를 출력하세요.
SELECT page, eventInfo,totals.timeOnSite  FROM `miteam-186206.82798328.ga_sessions_*` ,unnest(hits)
where totals.timeOnSite >10 and _table_suffix between '20200701' and '20200731'  

# 10. 특정 기간(7월 한달)동안 접속한 사용자 중 해당 사용자의 (총 방문횟수 / 안드로이드 / 데스크탑 / 기타)를 통해 방문한 횟수를 Count 하세요.
SELECT count(fullvisitorid)as sum_of_all, count(if(device.deviceCategory='mobile',1,null)) as mobile,count(if(device.deviceCategory='desktop',1,null)) as desktop,count(if(device.deviceCategory='tablet','1',null)) as sumofelse,
count(
(CASE
      WHEN device.deviceCategory IN('mobile', 'desktop') THEN null
      ELSE 1
    END)) as alpha
FROM `miteam-186206.82798328.ga_sessions_*`,unnest(hits) 
where _table_suffix between '20200701' and '20200731'  

# 11. 사용자, 세션ID, SessionStartTime, 세션 시작 요일을 출력하세요.
SELECT fullvisitorid, visitid, p as number,
case p
when 1 then "일요일"
when 2 then "월요일"
when 3 then "화요일"
when 4 then "수요일"
when 5 then "목요일"
when 6 then "금요일"
when 7 then "토요일"
end as dayofweek, date
FROM (select *, EXTRACT(dayofweek FROM (datetime(TIMESTAMP_SECONDS(visitStartTime),"Asia/Seoul"))) as p from `miteam-186206.82798328.ga_sessions_*`
where _table_suffix between "20200701" and "20200731" )
order by 3

# 12. 전체 방문 고객들의 접속 위치(city) 별 Count 계산
SELECT geonetwork.city, count(geonetwork.city) as count FROM `miteam-186206.82798328.ga_sessions_*` 
where geonetwork.city != "(not set)" and _table_suffix between "20200801" and "20200831"
group by 1

# 13. 8월 3일 방문 고객들의 7월 전체의 방문 페이지를 출력하세요.
SELECT page
FROM (select * from `miteam-186206.82798328.ga_sessions_*`,unnest(hits)
where _table_suffix between "20200701" and "20200731")
where fullvisitorid in (select fullvisitorid from `miteam-186206.82798328.ga_sessions_20200803`)
